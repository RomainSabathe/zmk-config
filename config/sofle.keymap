/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/backlight.h>
#include "zmk-helpers/key-labels/sofle.h"

#define BASE 0
#define NAV 1
#define MEDIA 2
#define SYM 3
#define ADJUST 4

#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 
#define KEYS_THUMBS LH0 LH1 LH2 LH3 LH4 RH0 RH1 RH2 RH3 RH4 

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <NAV MEDIA>;
            then-layer = <ADJUST>;
        };
    };
    
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "galliumv2";
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp B  &kp L    &kp D    &kp C     &kp V                            &kp J  &kp F     &kp O     &kp U    &kp COMMA    &kp EQUAL
&kp ESC   &hml LGUI N  &hml LALT R    &hml LSHFT T    &hml LCTRL S     &kp G                            &kp Y  &hmr LCTRL H     &hmr RSHFT A     &hmr LALT E    &hmr LGUI I &kp FSLH
&kp LSHFT &kp X  &kp Q    &kp M    &kp W     &kp Z      &kp C_MUTE &kp C_MUTE      &kp K  &kp P     &kp SQT &kp SEMI  &kp DOT &kp RSHFT
                 &kp LCTRL &kp LALT &lt MEDIA DELETE &lt NAV BSPC  &kp RET    &kp ESC  &lt SYM SPACE  &kp TAB &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp LA(LS(TAB)) LA(TAB)>;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&none &kp LA(N1) &kp LA(N2) &kp LA(N3) &kp LA(N4) &kp LA(N5)                 &kp LA(N6) &kp LA(N7) &kp LA(N8) &kp LA(N9) &kp LA(N0) &none 
&none &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(Y)                 &none &kp LA(TAB) &kp LC(TAB) &kp LC(LS(TAB)) &kp LA(LS(TAB)) &none 
&none &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &none                 &kp BSPC  &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp DEL 
&none &none &none &kp LC(A) &none &none     &trans &trans  &kp RET &kp HOME &kp PG_DN &kp PG_UP &kp END &caps_word 
      &none &none &none &none &none                 &kp ESC &kp SPACE &kp TAB &kp CAPS &none       
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        media_layer {
            display-name = "media";
            bindings = <
&none &none &none &none &none &rgb_ug RGB_TOG                 &none &none &none &none &none &none 
&none &none &none &none &none &none                 &none &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &none 
&none &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &none                 &bl BL_TOG  &kp C_PREV &kp C_RW &kp C_FF &kp C_NEXT &none
&none &none &none &none &none &none     &trans &trans  &out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
      &none &none &none &none &none                 &kp C_STOP &kp C_PP &kp ESC &none &none       
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            display-name = "sym";
            bindings = <
&none &none &none &none &none &none                &none &none &none &none &none &none 
&none &kp EXCL &kp AT &kp LBKT &kp RBKT &none                &none &none &none &none &none &none 
&none &kp STAR &kp HASH &kp LPAR &kp RPAR &kp BSLH                &none &kp LCTRL &kp LSHFT &kp LALT &kp LGUI &none 
&none &none &kp GRAVE &kp COMMA &kp PERIOD &none  &trans &trans &none &none &none &none &none &none 
      &none &none &kp SEMI &kp MINUS &kp EQUAL                &none &none &none &none &none       
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        template_layer {
            display-name = "template";
            bindings = <
&none &none &none &none &none &none                &none &none &none &none &none &none 
&none &none &none &none &none &none                &none &none &none &none &none &none 
&none &none &none &none &none &none                &none &none &none &none &none &none 
&none &none &none &none &none &none  &trans &trans &none &none &none &none &none &none 
      &none &none &none &none &none                &none &none &none &none &none       
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

    };
};
