/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/backlight.h>
#include "zmk-helpers/key-labels/sofle.h"
#include "zmk-helpers/helper.h"

#define BASE 0
#define NAV 1
#define SYM 2
#define NUM 3
#define MAC_BASE 4
#define MAC_NAV 5
#define MAC_SYM 6
#define MAC_NUM 7

/*
  ╭────────────────────────────┬────────────────────────────╮ ╭─────────────────────────────┬─────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │ │ LN5 LN4 LN3 LN2 LN1 LN0     │     RN0 RN1 RN2 RN3 RN4 RN5 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │ │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │ │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │ │ LB5 LB4 LB3 LB2 LB1 LB0 LEC │ REC RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯ ╰───────╮ LH4 LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 RH4 ╭───────╯
          ╰────────────────────┴────────────────────╯                 ╰─────────────────────┴─────────────────────╯         */


#define KEYS_L LN0 LN1 LN2 LN3 LN4 LN5 LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 
#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT1 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 
#define KEYS_THUMBS LH0 LH1 LH2 LH3 LH4 RH0 RH1 RH2 RH3 RH4 

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

// Sticky key
&sk {
    release-after-ms = <3000>; // Default is at 1s.
    // Releasing the stiky key as soon as another key is pressed (instead of released). This
    // prevents having multiple letters capitalised in case of a fast roll for instance.
    quick-release;  
    // This is activated by default. The stiky behavior continues when a modifier key is
    // pressed. Allows to combine modifiers (a la Callum mods).
    ignore-modifiers;  
};

// Sticky layer
&sl {
    release-after-ms = <1000>;  // Default is at 1s.
};

#define COMBO_TIMEOUT 15
/ {
    combos {
        compatible = "zmk,combos";
        // Enter / escape
        combo_return {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RM1 RM2>;  // H + A on Gallium
            bindings = <&kp RET>;
        };
        combo_return_left_hand {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LM0 LM1>;  // S + G on Gallium
            bindings = <&kp RET>;
        };
        combo_esc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LM1 LM2>;  // T + S on Gallium
            bindings = <&kp ESC>;
        };
        // Tab / shift tab
        combo_tab {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LM2 LM3>;  // R + T on Gallium
            bindings = <&kp TAB>;
        };
        combo_shift_tab {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RM2 RM3>;  // A + E on Gallium
            bindings = <&kp LS(TAB)>;
        };
        // Quick access to colon. I found it quite useful for vim.
        // Might drop it in the future.
        combo_colon {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RB2 RB3>;  // comma + semi on Gallium
            bindings = <&kp COLON>;
        };
        // Quick access to i3 workspaces via combos on the top row
        combo_alt_1 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LT2 LT1>;  // D + C on Gallium
            bindings = <&kp LA(N1)>;
        };
        combo_alt_2 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RT1 RT2>;  // F + O on Gallium
            bindings = <&kp LA(N2)>;
        };
        combo_alt_3 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LT3 LT2>;  // L + D on Gallium
            bindings = <&kp LA(N3)>;
        };
        combo_alt_4 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RT2 RT3>;  // O + U  on Gallium
            bindings = <&kp LA(N4)>;
        };
        combo_alt_5 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LT4 LT3>;  // B + L  on Gallium
            bindings = <&kp LA(N5)>;
        };
        combo_alt_6 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RT3 RT4>;  // U + , on Gallium
            bindings = <&kp LA(N6)>;
        };
        combo_alt_8 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <LT1 LT0>;  // C + V  on Gallium
            bindings = <&kp LA(N8)>;
        };
        combo_alt_9 {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <RT0 RT1>;  // J + F on Gallium
            bindings = <&kp LA(N9)>;
        };
    };
};

/ {
    macros {
    };
};

/ {
    
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        sk_shft: shift_into_caps_word {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };

        paren: lparen_into_rparen {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // BASE ------------------------------------------------------------------------------------------------------------------
        default_layer {
            display-name = "linux";bindings = <
/* 1 */   /* 2 */ /* 3 */   /* 4 */  /* 5 */  /* 6 */  /* 7 */ /* 8 */ /* 9 */   /* 10 */  /* 11 */ /* 12 */  /* 13 */  /* 14 */ 
&kp GRAVE &kp N1  &kp N2    &kp N3   &kp N4   &kp N5                   &kp N6    &kp N7    &kp N8   &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp B   &kp L     &kp D    &kp C    &kp V                    &kp J     &kp F     &kp O    &kp U     &kp COMMA &kp EQUAL
&kp ESC   &kp N   &kp R     &kp T    &kp S    &kp G                    &kp Y     &kp H     &kp A    &kp E     &kp I     &kp FSLH 
&kp LSHFT &kp X   &kp Q     &kp M    &kp W    &kp Z    &none   &none   &kp K     &kp P     &kp SQT  &kp SEMI  &kp DOT   &kp RSHFT
                  &kp LCTRL &kp LGUI &sk_shft &kp BSPC &mo NAV &mo SYM &kp SPACE &kp UNDER &kp RGUI &kp RCTRL                    
/* 1 */   /* 2 */ /* 3 */   /* 4 */  /* 5 */  /* 6 */  /* 7 */ /* 8 */ /* 9 */   /* 10 */  /* 11 */ /* 12 */  /* 13 */  /* 14 */ 
>;
            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp LA(LS(TAB)) LA(TAB)>;
        };

        // NAV ------------------------------------------------------------------------------------------------------------------
        nav_layer {
            display-name = "nav";bindings = <
/* 1 */       /* 2 */    /* 3 */     /* 4 */    /* 5 */    /* 6 */    /* 7 */ /* 8 */ /* 9 */       /* 10 */    /* 11 */    /* 12 */        /* 13 */        /* 14 */         
&none         &kp LA(N1) &kp LA(N2)  &kp LA(N3) &kp LA(N4) &kp LA(N5)                 &kp LA(N6)    &kp LA(N7)  &kp LA(N8)  &kp LA(N9)      &kp LA(N0)      &kp LC(LA(LS(L)))
&none         &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &kp LC(Y)                  &kp LC(LS(L)) &kp LA(TAB) &kp LC(TAB) &kp LC(LS(TAB)) &kp LA(LS(TAB)) &kp DEL          
&kp LA(LS(Q)) &sk LGUI   &sk LALT    &sk LSHFT  &sk LCTRL  &kp ESC                    &kp RET       &kp LEFT    &kp DOWN    &kp UP          &kp RIGHT       &kp RET          
&none         &kp LA(R)  &kp LA(D)   &kp LC(A)  &kp LA(F)  &none      &trans  &trans  &kp QMARK     &kp HOME    &kp PG_DN   &kp PG_UP       &kp END         &none            
                         &bootloader &trans     &trans     &trans     &trans  &mo NUM &key_repeat   &trans      &trans      &trans                                           
/* 1 */       /* 2 */    /* 3 */     /* 4 */    /* 5 */    /* 6 */    /* 7 */ /* 8 */ /* 9 */       /* 10 */    /* 11 */    /* 12 */        /* 13 */        /* 14 */         
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // SYM ------------------------------------------------------------------------------------------------------------------
        sym_layer {
            display-name = "sym";bindings = <
/* 1 */ /* 2 */  /* 3 */   /* 4 */   /* 5 */   /* 6 */     /* 7 */ /* 8 */ /* 9 */   /* 10 */  /* 11 */  /* 12 */    /* 13 */ /* 14 */ 
&none   &trans   &trans    &trans    &trans    &trans                      &trans    &trans    &trans    &trans      &trans   &none    
&none   &kp LBRC &kp LBKT  &kp LPAR  &kp DQT   &kp PIPE                    &kp GRAVE &kp SQT   &kp RPAR  &kp RBKT    &kp RBRC &none    
&none   &kp EXCL &kp PLUS  &kp MINUS &kp EQUAL &kp ESC                     &kp RET   &sk LCTRL &sk LSHFT &sk LALT    &sk LGUI &kp QMARK
&none   &kp STAR &kp TILDE &kp SLASH &kp HASH  &kp BSLH    &trans  &trans  &kp QMARK &kp SPACE &kp AT    &kp PRCNT   &kp AMPS &none    
                 &trans    &trans    &trans    &key_repeat &mo NUM &trans  &trans    &trans    &trans    &bootloader                   
/* 1 */ /* 2 */  /* 3 */   /* 4 */   /* 5 */   /* 6 */     /* 7 */ /* 8 */ /* 9 */   /* 10 */  /* 11 */  /* 12 */    /* 13 */ /* 14 */ 
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // NUM ------------------------------------------------------------------------------------------------------------------
        num_layer {
            display-name = "num";bindings = <
/* 1 */ /* 2 */         /* 3 */         /* 4 */         /* 5 */     /* 6 */   /* 7 */ /* 8 */ /* 9 */ /* 10 */ /* 11 */ /* 12 */     /* 13 */  /* 14 */
&none   &none           &none           &none           &none       &none                     &none   &none    &none    &none        &none     &none   
&none   &none           &none           &kp TAB         &kp LS(TAB) &none                     &none   &kp N7   &kp N8   &kp N9       &kp COMMA &none   
&none   &sk LGUI        &sk LALT        &sk LSHFT       &sk LCTRL   &kp LA(B)                 &none   &kp N4   &kp N5   &kp N6       &kp N0    &none   
&none   &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_HUI &none       &kp LA(V) &trans  &trans  &none   &kp N1   &kp N2   &kp N3       &kp DOT   &none   
                        &to MAC_BASE    &none           &none       &none     &none   &none   &none   &none    &none    &to MAC_BASE                   
/* 1 */ /* 2 */         /* 3 */         /* 4 */         /* 5 */     /* 6 */   /* 7 */ /* 8 */ /* 9 */ /* 10 */ /* 11 */ /* 12 */     /* 13 */  /* 14 */
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // MAC_BASE --------------------------------------------------------------------------------------------------------------
        mac_base_layer {
            display-name = "mac";bindings = <
/* 1 */   /* 2 */ /* 3 */   /* 4 */  /* 5 */  /* 6 */  /* 7 */     /* 8 */     /* 9 */   /* 10 */  /* 11 */ /* 12 */  /* 13 */  /* 14 */ 
&kp GRAVE &kp N1  &kp N2    &kp N3   &kp N4   &kp N5                           &kp N6    &kp N7    &kp N8   &kp N9    &kp N0    &kp MINUS
&kp TAB   &kp B   &kp L     &kp D    &kp C    &kp V                            &kp J     &kp F     &kp O    &kp U     &kp COMMA &kp EQUAL
&kp ESC   &kp N   &kp R     &kp T    &kp S    &kp G                            &kp Y     &kp H     &kp A    &kp E     &kp I     &kp FSLH 
&kp LSHFT &kp X   &kp Q     &kp M    &kp W    &kp Z    &none       &none       &kp K     &kp P     &kp SQT  &kp SEMI  &kp DOT   &kp RSHFT
                  &kp LCTRL &kp LGUI &sk_shft &kp BSPC &mo MAC_NAV &mo MAC_SYM &kp SPACE &kp UNDER &kp RGUI &kp RCTRL                    
/* 1 */   /* 2 */ /* 3 */   /* 4 */  /* 5 */  /* 6 */  /* 7 */     /* 8 */     /* 9 */   /* 10 */  /* 11 */ /* 12 */  /* 13 */  /* 14 */ 
>;
            sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB) &inc_dec_kp LA(LS(TAB)) LA(TAB)>;
        };

        // MAC_NAV ------------------------------------------------------------------------------------------------------------------
        mac_nav_layer {
            display-name = "mac-nav";bindings = <
/* 1 */       /* 2 */    /* 3 */     /* 4 */    /* 5 */    /* 6 */    /* 7 */ /* 8 */     /* 9 */       /* 10 */    /* 11 */    /* 12 */        /* 13 */        /* 14 */         
&none         &kp LA(N1) &kp LA(N2)  &kp LA(N3) &kp LA(N4) &kp LA(N5)                     &kp LA(N6)    &kp LA(N7)  &kp LA(N8)  &kp LA(N9)      &kp LA(N0)      &kp LC(LA(LS(L)))
&none         &kp LG(Z)  &kp LG(X)   &kp LG(C)  &kp LG(V)  &kp LG(Y)                      &kp LG(LS(L)) &kp LA(TAB) &kp LC(TAB) &kp LC(LS(TAB)) &kp LA(LS(TAB)) &kp DEL          
&kp LA(LS(Q)) &sk LCTRL  &sk LALT    &sk LSHFT  &sk LGUI   &kp ESC                        &kp RET       &kp LEFT    &kp DOWN    &kp UP          &kp RIGHT       &kp RET          
&none         &kp LA(R)  &kp LA(D)   &kp LG(A)  &kp LA(F)  &none      &trans  &trans      &kp QMARK     &kp HOME    &kp PG_DN   &kp PG_UP       &kp END         &none            
                         &bootloader &trans     &trans     &trans     &trans  &mo MAC_NUM &key_repeat   &trans      &trans      &trans                                           
/* 1 */       /* 2 */    /* 3 */     /* 4 */    /* 5 */    /* 6 */    /* 7 */ /* 8 */     /* 9 */       /* 10 */    /* 11 */    /* 12 */        /* 13 */        /* 14 */         
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // MAC_SYM ------------------------------------------------------------------------------------------------------------------
        mac_sym_layer {
            display-name = "mac-sym";bindings = <
/* 1 */ /* 2 */  /* 3 */   /* 4 */   /* 5 */   /* 6 */     /* 7 */     /* 8 */ /* 9 */   /* 10 */  /* 11 */  /* 12 */    /* 13 */  /* 14 */ 
&none   &trans   &trans    &trans    &trans    &trans                          &trans    &trans    &trans    &trans      &trans    &none    
&none   &kp LBRC &kp LBKT  &kp LPAR  &kp DQT   &kp PIPE                        &kp GRAVE &kp SQT   &kp RPAR  &kp RBKT    &kp RBRC  &none    
&none   &kp EXCL &kp PLUS  &kp MINUS &kp EQUAL &kp ESC                         &kp RET   &sk LGUI  &sk LSHFT &sk LALT    &sk LCTRL &kp QMARK
&none   &kp STAR &kp TILDE &kp SLASH &kp HASH  &kp BSLH    &trans      &trans  &kp QMARK &kp SPACE &kp AT    &kp PRCNT   &kp AMPS  &none    
                 &trans    &trans    &trans    &key_repeat &mo MAC_NUM &trans  &trans    &trans    &trans    &bootloader                    
/* 1 */ /* 2 */  /* 3 */   /* 4 */   /* 5 */   /* 6 */     /* 7 */     /* 8 */ /* 9 */   /* 10 */  /* 11 */  /* 12 */    /* 13 */  /* 14 */ 
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // MAC_NUM ------------------------------------------------------------------------------------------------------------------
        mac_num_layer {
            display-name = "mac-num";bindings = <
/* 1 */ /* 2 */   /* 3 */  /* 4 */   /* 5 */     /* 6 */         /* 7 */ /* 8 */ /* 9 */ /* 10 */ /* 11 */ /* 12 */ /* 13 */  /* 14 */
&none   &none     &none    &none     &none       &rgb_ug RGB_TOG                 &none   &none    &none    &none    &none     &none   
&none   &none     &none    &kp TAB   &kp LS(TAB) &none                           &none   &kp N7   &kp N8   &kp N9   &kp COMMA &none   
&none   &sk LCTRL &sk LALT &sk LSHFT &sk LGUI    &kp LA(B)                       &none   &kp N4   &kp N5   &kp N6   &kp N0    &none   
&none   &none     &none    &none     &none       &kp LA(V)       &trans  &trans  &none   &kp N1   &kp N2   &kp N3   &kp DOT   &none   
                  &to BASE &none     &none       &none           &none   &none   &none   &none    &none    &to BASE                   
/* 1 */ /* 2 */   /* 3 */  /* 4 */   /* 5 */     /* 6 */         /* 7 */ /* 8 */ /* 9 */ /* 10 */ /* 11 */ /* 12 */ /* 13 */  /* 14 */
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
